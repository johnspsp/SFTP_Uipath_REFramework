<Activity mc:Ignorable="sap sap2010" x:Class="FTP_Workflow_final" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/ftp" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_int_portNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_str_hostName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_localFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_str_remotePath" Type="InArgument(x:String)" />
    <x:Property Name="in_str_bpName" Type="InArgument(x:String)" />
    <x:Property Name="in_str_fileExtension" Type="InArgument(x:String)" />
    <x:Property Name="in_dt_dateTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_str_PID" Type="InArgument(x:String)" />
    <x:Property Name="in_str_credentialName" Type="InArgument(x:String)" />
    <x:Property Name="out_str_rawLocalFolderPath" Type="OutArgument(x:String)" />
    <x:Property Name="out_bool_ftpSuccess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_str_localResultPath" Type="OutArgument(x:String)" />
    <x:Property Name="in_str_BPID" Type="InArgument(x:String)" />
    <x:Property Name="in_bool_rerunStatus" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_keyFileName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1233,7523</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FTP_Workflow_final_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.FTP</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="The following workflow main takeaways:&#xA;1. Check if final renamed file already exist &#xA;2. Connect to FTP session&#xA;3. Check if remote directory exists, if not throw error&#xA;4. Check if local directory for raw files already exists? if not create the folder&#xA;5. Check if local directory for renamed files exists? if not create&#xA;6. Copy the file from raw folder to final folder" DisplayName="FTP_Workflow_final" sap:VirtualizedContainerService.HintSize="1145,7458" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="FTP Workflow" sap:VirtualizedContainerService.HintSize="1083,7253" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="username" />
        <Variable x:TypeArguments="ss:SecureString" Name="password" />
        <Variable x:TypeArguments="x:Boolean" Name="localFileExists" />
        <Variable x:TypeArguments="x:Boolean" Name="remotePathExists" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="ftpSuccess" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message - Starting The FTP Process" sap:VirtualizedContainerService.HintSize="1021,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_str_PID + &quot; - &quot; + &quot;FTP Workflow start&quot;]" />
      <ui:FileExistsX sap2010:Annotation.AnnotationText="To skip the whole process if the files is already processed" DisplayName="File Exists - Check if the file already processed before" Exists="[localFileExists]" sap:VirtualizedContainerService.HintSize="1021,207" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[Path.Combine(in_str_localFolderPath, in_dt_dateTime.Year.ToString, in_dt_dateTime.ToString(&quot;yyyy-MM-dd&quot;), $&quot;Traveloka_{in_str_BPID}_{in_dt_dateTime.ToString(&quot;ddMMMyy&quot;)}.{in_str_fileExtension}&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FileExistsX>
      <If sap2010:Annotation.AnnotationText="Check if rerun status true or not, if its true, even if the file already exists, it will run the whole process again (the purpose of the rerun)" Condition="[in_bool_rerunStatus = True]" DisplayName="If - Check if the rerun status True or False in config" sap:VirtualizedContainerService.HintSize="1021,508" sap2010:WorkflowViewState.IdRef="If_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[localFileExists]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Proceed to the whole FTP process" Condition="[localFileExists = False]" DisplayName="If - Local file is not exists" sap:VirtualizedContainerService.HintSize="1021,6254" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="987,5810" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - Proceed to FTP Session" sap:VirtualizedContainerService.HintSize="925,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_str_PID + &quot; - &quot; + &quot;Local file not exists - proceed to FTP connect&quot;]" />
            <ui:GetRobotCredential TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Ger credential for the FTP connection from orchestrator asset" AssetName="[in_str_credentialName]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="925,217" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[password]" Username="[username]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetRobotCredential>
            <p:WithFtpSession ClientCertificatePassword="{x:Null}" ClientCertificatePath="{x:Null}" ContinueOnError="False" DisplayName="Start FTP Session" FtpsMode="Explicit" sap:VirtualizedContainerService.HintSize="925,5332" Host="[in_str_hostName]" sap2010:WorkflowViewState.IdRef="WithFtpSession_1" Password="[new System.Net.NetworkCredential(string.Empty, password).Password]" Port="[in_int_portNumber]" Username="[username]">
              <p:WithFtpSession.Body>
                <ActivityAction x:TypeArguments="p:IFtpSession">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="p:IFtpSession" Name="FtpSession" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="891,5222" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message - Start FTP Session" sap:VirtualizedContainerService.HintSize="829,173" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_str_PID + &quot; - &quot; + &quot;Start FTP Session&quot;]" />
                    <p:DirectoryExists sap2010:Annotation.AnnotationText="Check if the dir in FTP exists" ContinueOnError="False" DisplayName="Directory Exists in Remote Path" Exists="[remotePathExists]" sap:VirtualizedContainerService.HintSize="829,153" sap2010:WorkflowViewState.IdRef="DirectoryExists_1" RemotePath="[in_str_remotePath]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:DirectoryExists>
                    <If Condition="[remotePathExists]" DisplayName="If - Remote Path Exists" sap:VirtualizedContainerService.HintSize="829,4808" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="795,4273" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(p:FtpObjectInfo)" Name="filesInDirectory" />
                            <Variable x:TypeArguments="x:Int32" Name="currentItemIdx" />
                            <Variable x:TypeArguments="x:Boolean" Default="True" Name="fileNotFound" />
                            <Variable x:TypeArguments="scg:List(p:FtpObjectInfo)" Name="listOfFiles" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <p:EnumerateObjects ContinueOnError="False" DisplayName="Loop through the files in FTP remote path" Files="[filesInDirectory]" sap:VirtualizedContainerService.HintSize="733,122" sap2010:WorkflowViewState.IdRef="EnumerateObjects_1" Recursive="False" RemotePath="[in_str_remotePath]" />
                          <Assign sap2010:Annotation.AnnotationText="Assign enumerable result from FTP to list, order by modified date descending order" DisplayName="Assign enumerable to list" sap:VirtualizedContainerService.HintSize="733,156" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:List(p:FtpObjectInfo)">[listOfFiles]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:List(p:FtpObjectInfo)">[filesInDirectory.OrderByDescending(Function (x) x.Modified).toList]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:ForEach x:TypeArguments="p:FtpObjectInfo" Condition="[fileNotFound]" CurrentIndex="[currentItemIdx]" DisplayName="Loop over every files found in remote path" sap:VirtualizedContainerService.HintSize="733,3907" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listOfFiles]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="p:FtpObjectInfo">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="p:FtpObjectInfo" Name="currentItem" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="699,3720" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If sap2010:Annotation.AnnotationText="Check if the file has period date in its name&#xA;" Condition="[currentItem.Name.Contains(in_dt_dateTime.ToString(&quot;yyyyMMdd&quot;)) AndAlso currentItem.Name.Contains(in_keyFileName)]" sap:VirtualizedContainerService.HintSize="637,3632" sap2010:WorkflowViewState.IdRef="If_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="603,2876" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Boolean" Name="localFolderExists" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Download File" sap:VirtualizedContainerService.HintSize="541,1156" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="rawFolderExists" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:FolderExistsX sap2010:Annotation.AnnotationText="Check if local folder for raw files already exists or not, if not create the folder " DisplayName="Folder Exists - Raw Local Folder Dir" Exists="[rawFolderExists]" sap:VirtualizedContainerService.HintSize="450,207" sap2010:WorkflowViewState.IdRef="FolderExistsX_3" Path="[Path.Combine(in_str_localFolderPath, &quot;Raw Files&quot;)]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:FolderExistsX>
                                          <If sap2010:Annotation.AnnotationText="Create folder for raw files " Condition="[rawFolderExists = False]" sap:VirtualizedContainerService.HintSize="450,495" sap2010:WorkflowViewState.IdRef="If_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,191" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="354,103" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[Path.Combine(in_str_localFolderPath, &quot;Raw Files&quot;)]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download Files From FTP Session" sap:VirtualizedContainerService.HintSize="450,170" sap2010:WorkflowViewState.IdRef="DownloadFiles_2" LocalPath="[Path.Combine(in_str_localFolderPath, &quot;Raw Files&quot;)]" Overwrite="True" Recursive="False" RemotePath="[currentItem.FullName]" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,164" sap2010:WorkflowViewState.IdRef="LogMessage_8" Message="[in_str_PID + &quot; - &quot; + &quot;Download files done&quot;]" />
                                        </Sequence>
                                        <Sequence DisplayName="Copy + Rename Downloaded File" sap:VirtualizedContainerService.HintSize="541,1632" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:FolderExistsX sap2010:Annotation.AnnotationText="Check if local folder for final result exists or not, if not create the folder first&#xA;" DisplayName="Folder Exists - Final Local Result Dir" Exists="[localFolderExists]" sap:VirtualizedContainerService.HintSize="479,222" sap2010:WorkflowViewState.IdRef="FolderExistsX_4" Path="[Path.Combine(in_str_localFolderPath, in_dt_dateTime.Year.ToString, in_dt_dateTime.ToString(&quot;yyyy-MM-dd&quot;))]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:FolderExistsX>
                                          <If sap2010:Annotation.AnnotationText="Create the folder for final renamed file" Condition="[localFolderExists = False]" sap:VirtualizedContainerService.HintSize="479,495" sap2010:WorkflowViewState.IdRef="If_8">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="416,191" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="354,103" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[Path.Combine(in_str_localFolderPath, in_dt_dateTime.Year.ToString, in_dt_dateTime.ToString(&quot;yyyy-MM-dd&quot;))]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Copy the file from raw folder to final dir&#xA;" Destination="[Path.Combine(in_str_localFolderPath, in_dt_dateTime.Year.ToString, in_dt_dateTime.ToString(&quot;yyyy-MM-dd&quot;), $&quot;Traveloka_{in_str_BPID}_{in_dt_dateTime.ToString(&quot;ddMMMyy&quot;)}.{in_str_fileExtension}&quot;)]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="479,228" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[Path.Combine(in_str_localFolderPath, &quot;Raw Files&quot;, currentItem.Name)]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:CopyFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="479,114" sap2010:WorkflowViewState.IdRef="Assign_5">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[ftpSuccess]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="479,241" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[out_str_rawLocalFolderPath]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_str_localFolderPath, "Raw Files", currentItem.Name)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[out_bool_ftpSuccess]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">[ftpSuccess]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[out_str_localResultPath]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_str_localFolderPath, in_dt_dateTime.Year.ToString, in_dt_dateTime.ToString("yyyy-MM-dd"), $"Traveloka_{in_str_BPID}_{in_dt_dateTime.ToString("ddMMMyy")}.{in_str_fileExtension}")]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[fileNotFound]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="479,173" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[in_str_PID + &quot; - &quot; + &quot;Copy file done&quot;]" />
                                          <ui:Break DisplayName="Break from ftp files loop" sap:VirtualizedContainerService.HintSize="479,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                                        </Sequence>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="512,553" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[currentItemIdx = filesInDirectory.Count - 1 AND fileNotFound = True]" sap:VirtualizedContainerService.HintSize="450,465" sap2010:WorkflowViewState.IdRef="If_9">
                                          <If.Then>
                                            <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="416,201" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Throw Exception="[New BusinessRuleException(&quot;File Not Found: The requested file could not be located in the remote FTP directory. Please verify the file name and path to ensure they are correct.&quot;)]" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,374" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,173" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[in_str_PID + &quot; - &quot; + &quot;Remote Path Not Found&quot;]" />
                          <Throw Exception="[New BusinessRuleException(&quot;Remote Path Not Found: The requested path could not be located in the remote FTP directory. Please verify the file path to ensure they are correct.&quot;)]" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_2" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </p:WithFtpSession.Body>
            </p:WithFtpSession>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[in_str_PID + &quot; - &quot; + &quot;Local final file already exists, abort process&quot;]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>